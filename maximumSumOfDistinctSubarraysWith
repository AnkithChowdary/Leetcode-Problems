class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        unordered_map<int,int>mp;
        long long maxSum=0,cSum = 0;
        int n=nums.size();

        for (int i=0;i<n;i++) {
            mp[nums[i]]++;
            cSum+= nums[i];

           
            if (i>=k){
                mp[nums[i-k]]--;
                if (mp[nums[i-k]]==0){      // Like this we discard the starting values
                    mp.erase(nums[i-k]);
                }
                cSum-=nums[i-k];
            }

           
            if(i>=k-1&&mp.size()==k) {
                maxSum=max(maxSum,cSum);
            }
        }
        return maxSum;
    }
};
